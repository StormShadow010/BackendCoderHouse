components:
  schemas:
    Product:
      type: object
      properties:
        title:
          description: Name of the product
          type: string
        photo:
          description: Description of the product
          type: string
        category:
          description: Description of the category
          type: string
        price:
          description: Description of the price
          type: number
          format: float
        stock:
          description: Description of the quantity
          type: integer
      example:
        title: Example 1
        photo: A photo of a product
        category: Nintendo
        price: 50.99
        stock: 100
  responses:
    message200:
      description: Success message
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request to success
                type: number
              message:
                description: Descriptive text with the success of the operation
                type: string
            example:
              statusCode: 200
              message: Product found successfully
    response200one:
      description: Success response with one item
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request for success returning data
                type: number
              response:
                description: Object with the requested resource data
                $ref: "#/components/schemas/Product"
            example:
              statusCode: 200
              response:
                title: Example 1
                photo: A photo of a product
                category: Nintendo
                price: 50.99
                stock: 100
    response200all:
      description: Success response with all items
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request for success returning data
                type: number
              response:
                description: Array of objects of the requested resource
                type: array
                items:
                  $ref: "#/components/schemas/Product"
            example:
              statusCode: 200
              response:
                - title: Example 1
                  photo: A photo of a product
                  category: Nintendo
                  price: 50.99
                  stock: 100
                - title: Example 2
                  photo: A photo of a product
                  category: PlayStation
                  price: 25.10
                  stock: 10
    message201:
      description: Product creation success message
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request for successful creation
                type: number
              message:
                description: Descriptive text with success in creation
                type: string
            example:
              statusCode: 201
              message: "Product created successfully"
    response201:
      description: Success response with created item
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request for successful creation
                type: number
              response:
                description: Object with data created successfully
                $ref: "#/components/schemas/Product"
            example:
              statusCode: 201
              response:
                title: Example 1
                photo: A photo of a product
                category: Nintendo
                price: 50.99
                stock: 100
    paginate:
      description: Paginated response
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request to success returning paginated data
                type: number
              response:
                description: Array of paged and sorted objects of the requested resource
                type: array
                items:
                  $ref: "#/components/schemas/Product"
              info:
                description: Pagination data
                type: object
                properties:
                  totalDocs:
                    description: Total number of documents
                    type: integer
                  page:
                    description: Current page number
                    type: integer
                  totalPages:
                    description: Total number of pages
                    type: integer
                  limit:
                    description: Number of items per page
                    type: integer
                  prevPage:
                    description: Indicator if there is a previous page
                    type: boolean
                  nextPage:
                    description: Indicator if there is a next page
                    type: boolean
            example:
              statusCode: 200
              response:
                - title: Example 1
                  photo: A photo of a product
                  category: Nintendo
                  price: 50.99
                  stock: 100
                - title: Example 2
                  photo: A photo of a product
                  category: PlayStation
                  price: 25.10
                  stock: 10
              info:
                totalDocs: 40
                page: 1
                totalPages: 4
                limit: 10
                prevPage: false
                nextPage: true
    error400:
      description: Client error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request failing due to customer problems
                type: number
              message:
                description: Descriptive text with error message from the client
                type: string
            example:
              statusCode: 400
              message: Bad request. Please check your request and try again.
    error401:
      description: Authentication error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the authentication failure request
                type: number
              message:
                description: Descriptive text with authentication error message
                type: string
            example:
              statusCode: 401
              message: Bad auth from policies!
    error403:
      description: Authorization error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request for authorization failure
                type: number
              message:
                description: Descriptive text with authorization error message
                type: string
            example:
              statusCode: 403
              message: Forbidden from policies!
    error404:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code corresponding to the request for failure due to not finding what was requested
                type: number
              message:
                description: Descriptive text with error message indicating that the resource was not found
                type: string
            example:
              statusCode: 404
              message: Resource not found. Please check the URL and try again.
    error500:
      description: Server error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                description: Status code for server errors
                type: number
              message:
                description: Descriptive text with error message from the server
                type: string
            example:
              statusCode: 500
              message: CODER API ERROR.
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
paths:
  /api/products:
    post:
      summary: Create a new product
      security:
        - cookieAuth: []
      tags:
        - Product
      requestBody:
        required: true
        description: The product object to be created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/responses/message201"
        "400":
          description: Invalid or incomplete data
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error400"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error401"
        "403":
          description: Authorization failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error403"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error500"
    get:
      summary: Get all products by category
      tags:
        - Product
      parameters:
        - name: category
          in: query
          description: Filter products by category (Nintendo, Play Store)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of all products
          content:
            application/json:
              schema:
                $ref: "#/components/responses/response200all"
        "400":
          description: Invalid or incomplete data
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error400"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error401"
        "403":
          description: Authorization failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error403"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error500"
  /api/products/paginate:
    get:
      summary: Get paginated products
      tags:
        - Product
      parameters:
        - name: title
          in: query
          description: Title Of products
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Paginated list of products
          content:
            application/json:
              schema:
              $ref: "#/components/responses/response200one"
        "400":
          description: Invalid or incomplete data
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error400"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error401"
        "403":
          description: Authorization failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error403"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error404"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error500"
  /api/products/{pid}:
    get:
      summary: Get a product by ID
      tags:
        - Product
      parameters:
        - name: pid
          in: path
          description: Unique identifier of the product
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schema:
              $ref: "#/components/responses/response200one"
        "400":
          description: Invalid or incomplete data
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error400"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error404"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error500"
    put:
      summary: Update a product by ID
      tags:
        - Product
      security:
        - cookieAuth: []
      parameters:
        - name: pid
          in: path
          description: Unique identifier of the product
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: The updated product object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
              $ref: "#/components/responses/message200"
        "400":
          description: Invalid or incomplete data
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error400"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error401"
        "403":
          description: Authorization failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error403"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error404"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error500"
    delete:
      summary: Delete a product by ID
      tags:
        - Product
      security:
        - cookieAuth: []
      parameters:
        - name: pid
          in: path
          description: Unique identifier of the product
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Product deleted successfully
          content:
          application/json:
            schema:
              $ref: "#/components/responses/response200one"
        "400":
          description: Invalid or incomplete data
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error400"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error401"
        "403":
          description: Authorization failed
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error403"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error404"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/error500"
